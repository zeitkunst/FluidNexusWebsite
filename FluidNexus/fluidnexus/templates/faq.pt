<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:tal="http://xml.zope.org/namespaces/tal"
    xmlns:metal="http://xml.zope.org/namespaces/metal"
    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
    metal:use-macro="base">
    <tal:block metal:fill-slot="content">
    <div class="row">
	    <div class="pre_2 col_8 last">

            <div>
                <h1 i18n:translate="">Frequently Asked Questions</h1>
            </div>
            <h2 i18n:translate="">Is Fluid Nexus ready for use?</h2>
            <p i18n:translate="">We want to make this clear: Fluid Nexus is alpha software and is not to be relied upon for critical situations.  A little louder: FLUID NEXUS IS ALPHA SOFTWARE AND IS NOT TO BE RELIED UPON FOR CRITICAL SITUATIONS.  We have provided binaries to enable others to easily test the software and help us make it better.  But this distribution of binaries (along with the source code, of course) is not meant to imply that it is production-ready.  We encourage people to download the software, run tests in safe, secure locations, and let us know of any issues.  Or, if they possess coding skills, to fork the code and send us a patch.  Or, if they are able to translate the software, to get in touch.</p>
            <h2 i18n:translate="">Fluid Nexus sends messages to any other device running the software, yes?</h2>
            <p i18n:translate="">Indeed.  Fluid Nexus works on an opportunistic, broadcast model whereby it searches for any other device in its vicinity via network modalities that must be explicitly enabled by the user: Bluetooth, and link-local connections over WiFi via zeroconf service discovery.  No messages are sent if you are only connected to the Internet via 3G/EDGE.  Message passing works by first exchanging unique hashes of messages to determine which messages to send, and then by sending the messages themselves.  An example of the client side of the protocol can be found in <a href="https://github.com/zeitkunst/FluidNexusAndroid/blob/master/src/net/fluidnexus/FluidNexusAndroid/services/BluetoothClientThread.java">BluetoothClientThread.java</a>.</p>
            <h2 i18n:translate="">So what is Fluid Nexus good for?</h2>
            <p i18n:translate="">Fluid Nexus is designed to distribute messages and multimedia to as many people as are running the software.  It works on a model of transmission where people become carriers of data via movement throughout the world, coupled to a set of local networking technologies that attempt to spread messages to nearby devices.</p>
            <p i18n:translate="">This means that, under certain situations, others whom you do not know might receive the messages you send, meaning you are implicitly trusting someone else to handle your data.  This is commonly understood to be a major security hole.  But at times it is the best option you have, especially if other modalities are shut down.  And sometimes it only matters that someone, anyone, receives a particularly important piece of documentation that can then be potentially distributed to a wider audience.</p>
            <p i18n:translate="">With that said, Fluid Nexus is not designed for secure communications.  FLUID NEXUS IS NOT DESIGNED FOR SECURE COMMUNICATIONS.  Other applications are much better at that and at providing certain guarantees.  Nevertheless, we expect that the users of Fluid Nexus will develop interesting ways to work within the confines of this model, for example by using <a href="http://en.wikipedia.org/wiki/Steganography">steganography</a>.  We want to hear about other ideas.  Fluid Nexus is only one of many projects being developed by others around the world for similar situations.</p>
            <p i18n:translate="">Finally, software is under development called <a href="https://lab.safermobile.org/wiki/InTheClear">InTheClear</a> that will enable one to quickly wipe their device in case of danger.  But given that FLUID NEXUS IS ALPHA SOFTWARE AND IS NOT TO BE RELIED UPON FOR CRITICAL SITUATIONS, we hope that you will not need this still-under-development software.</p>
            <h2 i18n:translate="">What networking technologies does Fluid Nexus use?</h2>
            <p i18n:translate="">At the moment Fluid Nexus uses Bluetooth and link-local wifi.  Bluetooth works on the order of 10 meters and was primarily designed as a point-to-point local wireless protocol.  On Android the Bluetooth support is somewhat subpar but we have worked around as many of the issues as we could.</p>
            <p i18n:translate="">Link-local wifi refers to a local wifi connection before it has passed from one router to another.  In other words, if you had a home wireless router, link-local wifi would refer to the possible connections between any of the machines directly connected to your wireless router.  Fluid Nexus uses the <a href="http://en.wikipedia.org/wiki/Zeroconf">zeroconf</a> protocol (known as Bonjour on OS X) to automatically discover other devices running the software.</p>
            <p i18n:translate="">While it may seem counter-intuitive to use a wifi technology in software that purports to not need access to the Internet, it has to be noted that wifi is not predicated on Internet access.  Indeed, even if there would be no direct Internet access, devices connected to the same link-local wifi router could still form a network amongst themselves.  And if access to the internet was removed for whatever reason, people could still open their wifi routers to enable others to share information using software such as Fluid Nexus.</p>
            <p i18n:translate="">Everything just said regarding link-local wifi is also applicable if you are connected via ethernet.</p>
            <p i18n:translate="">We are planning on implementing an ad-hoc wifi feature in the near future, thus obviating the need to connect to an existing wifi network.  <a href="http://code.google.com/p/android/issues/detail?id=82">Unnecessary limitations</a> in most Android implementations are making this more difficult than it should be.</p>
            <h2 i18n:translate="">Why does my Android phone require pairing to another device?</h2>
            <p i18n:translate="">Unfortunately the Android OS requires pairing before any Bluetooth data connection can be made.  This is beyond our control, sorry.</p>
            <h2 i18n:translate="">Why can't other devices see my Android phone using Bluetooth?</h2>
            <p i18n:translate="">Unfortunately Android has an annoying "feature" that limits discoverability to only 120s or 300s at a time.  This is ostensibly for security purposes.  This is a <a href="http://code.google.com/p/android/issues/detail?id=6348">known "bug"</a> that is theoretically fixed in later versions of the OS.  There is nothing we can do about this other than popping up an authorization windows every 120s&mdash;which is something we don't want to do.  One way to get around this is to ensure that any Desktop devices you have running the software are set to be discoverable; however, there are security implications for doing this so be sure you understand them before doing so.</p>
            <p i18n:translate="">Additionally, you can pair the devices you are interested in connecting to prior to use of Fluid Nexus in the field.  The Android application will always try and connect to paired devices&mdash;if they are nearby&mdash;along with any other devices that it discovers.  Once an Android phone has paired with another device, it will always be able to connect to it (assuming it's in range), regardless of its discoverability.</p>
            <p i18n:translate="">Finally, we have provided the option for users to make the device discoverable for a short period of time through a menu option.</p>
            <h2 i18n:translate="">Can malicious users of Fluid Nexus spread counter information?</h2>
            <p i18n:translate="">Indeed they can!  Yet this is nothing new.  We trust that Internet users are capable of deciding for themselves the veracity of news posted to services such as Twitter or the New York Times.  We have decided to let this be worked out in use through decisions by the users, rather than enforcing any particular technological approach.</p>
            <p i18n:translate="">Given that we do not have an explicit user representation and no authentication of a user via a central authority, a Sybil attack is not the right way to think about threats to Fluid Nexus.  Flooding is more of an issue.  The Bluetooth code currently will not send messages larger than a certain size for performance reasons; we will implement an option to prevent <em>reading</em> messages over a certain size in a near future update.  We have found in our own testing that the interfaces and the protocol work with no major loss of performance for bunches of 500 messages or more at a time.  Additionally, the "blacklist" feature allows you to remove certain messages from further distribution by your device.  If a message is blacklisted your device will not send it on to other devices. </p>
            <h2 i18n:translate="">Is information passing through Fluid Nexus encrypted?</h2>
            <p i18n:translate="">There's two issues to consider here: encryption of messages stored on a device, and encryption of messages as they pass from one device to another.</p>
            <p i18n:translate="">Regarding encryption of stored messages on a device, at the moment <strong>messages and received files are not stored encrypted</strong>.  On Android, we plan on incorporating <a href="https://guardianproject.info/code/sqlcipher/">sqlcipher</a> in a near-future release once it has been deemed ready for prime-time.  We are looking for help in figuring out a secure way to pass passphrases from our main activity to our content provider that would unlock the sqlcipher database.  On the Desktop, we do not plan on implementing any form of message encryption within the software itself.  We believe encryption on platforms like Linux and Windows is better taken care of using native tools, such as an ecryptfs encrypted home directory, LUKS encrypted disk, or TrueCrypt encrypted volume.  All of these options already exist, but it is beyond the scope of this FAQ to explain how to set them up.</p>
            <p i18n:translate="">Regarding encryption of messages and data as they pass from one device to another, we do not necessarily see the point of this given the current broadcast model of Fluid Nexus.  Since anyone running the software will receive all messages sent by other users, encryption does nothing to prevent eavesdropping; all someone has to do is run a copy of the software in order to read the messages.  This is by design; oftentimes it is better to spread messages to anyone, even if they are an adversary.  (This could be considered a "Twitter"-like model of information distribution.)  Additionally, encryption of messages from one device to another requires some sort of trust model whereby you can verify that another device is really who or what it claims to be.  With e-mail this accomplished via a web of trust and signed keys; with SSL-encrypted websites, for example, this is currently accomplished via certificate authorities (but see also the <a href="http://convergence.io/">convergence</a> project).  We would have to import one of these models into the Fluid Nexus project in order for encryption to make any sense.</p>
            <p i18n:translate="">With that said, we do utilize the encryption facilities of the native bluetooth stacks on Android, Windows, and Linux by setting up secure RFCOMM sockets.</p>
            <p i18n:translate="">On the other hand, it might be possible to send directed, PGP encrypted e-mails via the Fluid Nexus system.  This might expose your recipient's e-mail address to others, but the title and the message content could be encrypted.  This is something we are considering for a future release.</p>
            <h2 i18n:translate="">How can I send encrypted files using Fluid Nexus?</h2>
            <p i18n:translate="">It <em>is</em> possible to send encrypted attachments right now.  All you have to do is encrypt the file offline using another piece of software such as <a href="http://thialfihar.org/projects/apg/">Android Privacy Guard (APG)</a> (making sure to retain the same file extension) and then add the file as an attachment to your message.  Others won't be able to view the attachment.  The message text will be sent in plaintext, however.  Your recipient will have to know to decrypt the message offline.  All attachments are saved in the folder <code>FluidNexusAttachments</code> at the root of your internal SD card.</p>

            <h2 i18n:translate=""></h2>
            <p i18n:translate=""></p>
        </div>
    </div>
    </tal:block>
</html>
